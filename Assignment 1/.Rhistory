knitr::opts_chunk$set(echo = TRUE)
getwd()
DDT = read.csv("DDT.csv", header=TRUE, sep=",")
head(DDT)
m=with(DDT, as.numeric(levels(factor(MILE))))
colm = c()
for (i in 1:length(DDT$MILE)) {
colm[i]=which(DDT$MILE[i]==m)
}
coplot(LENGTH~WEIGHT|RIVER*SPECIES,data=DDT,col=colm)
m=with(ddt, as.numeric(levels(factor(MILE))))
getwd()
DDT = read.csv("DDT.csv", header=TRUE, sep=",")
head(DDT)
m=with(DDT, as.numeric(levels(factor(MILE))))
colm = c()
for (i in 1:length(DDT$MILE)) {
colm[i]=which(DDT$MILE[i]==m)
}
coplot(LENGTH~WEIGHT|RIVER*SPECIES,data=DDT,col=colm)
coplot(LENGTH~WEIGHT|RIVER*SPECIES,data=DDT,col=colm)
m=with(DDT, as.numeric(levels(factor(MILE))))
m
DDT
m=with(DDT, as.numeric(levels(factor(MILE))))
m=with(DDT, as.numeric(levels(factor(MILE))))
m=with(DDT, as.numeric(levels(factor(MILE))))
m=with(DDT, as.numeric(levels(factor(MILE))))
m
DDT = read.csv("DDT.csv", header=TRUE, sep=",")
head(DDT)
m=subset(DDT,RIVER=="FCM" & SPECIES=="CCATFISH",)
DDT = read.csv("DDT.csv", header=TRUE, sep=",")
head(DDT)
m=ddt[ddt$RIVER=="FCM" & ddt$SPECIES=="CCATFISH",]
ddt = read.csv("DDT.csv", header=TRUE, sep=",")
head(ddt)
m=ddt[ddt$RIVER=="FCM" & ddt$SPECIES=="CCATFISH",]
m
ddt = read.csv("DDT.csv", header=TRUE, sep=",")
m=ddt[ddt$RIVER=="FCM" & ddt$SPECIES=="CCATFISH",]
m
ddt = read.csv("DDT.csv", header=TRUE, sep=",")
m=ddt[ddt$RIVER=="FCM" & ddt$SPECIES=="CCATFISH",]
m
mean(m$DDT)
ddt = read.csv("DDT.csv", header=TRUE, sep=",")
m=ddt[ddt$RIVER=="FCM" & ddt$SPECIES=="CCATFISH",]
m
mean(m$DDT)
ddt = read.csv("DDT.csv", header=TRUE, sep=",")
m=ddt[ddt$RIVER=="FCM" & ddt$SPECIES=="CCATFISH",]
m
mean(m$DDT)
mtbe=read.table(file.choose(),sep=",",header=TRUE)
head(mtbe) # First six lines
dim(mtbe) # rows and columns
ind=sample(1:223,5,replace=FALSE) # random indices
mtbe[ind,]
mtbeo=na.omit(mtbe)
head(mtbeo)
depth=mtbeo[mtbeo$Aquifier=="Unconsoli",]$Depth
sd(depth)
mtbe=read.csv("MTBE.csv")
head(mtbe) # First six lines
dim(mtbe) # rows and columns
ind=sample(1:223,5,replace=FALSE) # random indices
mtbe[ind,]
mtbeo=na.omit(mtbe)
head(mtbeo)
depth=mtbeo[mtbeo$Aquifier=="Unconsoli",]$Depth
sd(depth)
mtbe=read.csv("MTBE.csv")
head(mtbe) # First six lines
dim(mtbe) # rows and columns
ind=sample(1:223,5,replace=FALSE) # random indices
mtbe[ind,]
mtbeo=na.omit(mtbe)
head(mtbeo)
depth=mtbeo[mtbeo$Aquifier=="Bedrock",]$Depth
sd(depth)
eq=read.csv("EARTHQUAKE.csv")
head(eq) # First six lines
dim(eq) # rows and columns
ind=sample(1:2929,30,replace=FALSE) # random indices
eq[ind,]
quartz()
eq=read.csv("EARTHQUAKE.csv")
head(eq) # First six lines
dim(eq) # rows and columns
ind=sample(1:2929,30,replace=FALSE) # random indices
eq[ind,]
plot(ts(eq$MAG))
median(eq$MAGNITUDE)
library(qcc)
install.packages("qcc")
freq=c(15,8,63,20)
RL=c("None", "Both", "LegsOnly", "WheelsOnly")
l=rep(RL, freq)
pareto.chart(freq)
pareto<-function(x,mn="Pareto barplot",...){  # x is a vector
x.tab=table(x)
xx.tab=sort(x.tab, decreasing=TRUE,index.return=FALSE)
cumsum(as.vector(xx.tab))->cs
length(x.tab)->lenx
bp<-barplot(xx.tab,ylim=c(0,max(cs)),las=2)
lb<-seq(0,cs[lenx],l=11)
axis(side=4,at=lb,labels=paste(seq(0,100,length=11),"%",sep=""),las=1,line=-1,col="Blue",col.axis="Red")
for(i in 1:(lenx-1)){
segments(bp[i],cs[i],bp[i+1],cs[i+1],col=i,lwd=2)
}
title(main=mn,...)
}
freq=c(15,8,63,20)
RL=c("None", "Both", "LegsOnly", "WheelsOnly")
l=rep(RL, freq)
pareto.chart(freq)
pareto<-function(x,mn="Pareto barplot",...){  # x is a vector
x.tab=table(x)
xx.tab=sort(x.tab, decreasing=TRUE,index.return=FALSE)
cumsum(as.vector(xx.tab))->cs
length(x.tab)->lenx
bp<-barplot(xx.tab,ylim=c(0,max(cs)),las=2)
lb<-seq(0,cs[lenx],l=11)
axis(side=4,at=lb,labels=paste(seq(0,100,length=11),"%",sep=""),las=1,line=-1,col="Blue",col.axis="Red")
for(i in 1:(lenx-1)){
segments(bp[i],cs[i],bp[i+1],cs[i+1],col=i,lwd=2)
}
title(main=mn,...)
}
pareto<-function(x,mn="Pareto barplot",...){  # x is a vector
x.tab=table(x)
xx.tab=sort(x.tab, decreasing=TRUE,index.return=FALSE)
cumsum(as.vector(xx.tab))->cs
length(x.tab)->lenx
bp<-barplot(xx.tab,ylim=c(0,max(cs)),las=2)
lb<-seq(0,cs[lenx],l=11)
axis(side=4,at=lb,labels=paste(seq(0,100,length=11),"%",sep=""),las=1,line=-1,col="Blue",col.axis="Red")
for(i in 1:(lenx-1)){
segments(bp[i],cs[i],bp[i+1],cs[i+1],col=i,lwd=2)
}
title(main=mn,...)
}
freq=c(15,8,63,20)
RL=c("None", "Both", "LegsOnly", "WheelsOnly")
l=rep(RL, freq)
pareto(freq)
office=12
windows=32
explorer=6
pieData <- c(office,windows,explorer)
quartz()
office=12
windows=32
explorer=6
pieData <- c(office,windows,explorer)
pie(pieData, col=4:6, main="Microsoft Products with Security Issues", labels=c("Office", "Windows", "Explorer"))
office=12
windows=32
explorer=6
pieData <- c(office,windows,explorer)
pie(pieData, col=1:3, main="Microsoft Products with Security Issues", labels=c("Office", "Windows", "Explorer"))
office=12
windows=32
explorer=6
pieData <- c(office,windows,explorer)
pie(pieData, col=2:4, main="Microsoft Products with Security Issues", labels=c("Office", "Windows", "Explorer"))
DenialOfService=6
InformationDisclosure=8
RemoteCodeExecution=22
Spoofing=3
PrivilegeElevation=11
paretoData <- c(DenialOfService,InformationDisclosure,RemoteCodeExecution,Spoofing,PrivilegeElevation)
pareto(paretoData, col=2:7, main="Expected Reperrcussions from Security Issues")
DenialOfService=6
InformationDisclosure=8
RemoteCodeExecution=22
Spoofing=3
PrivilegeElevation=11
paretoData <- c(DenialOfService,InformationDisclosure,RemoteCodeExecution,Spoofing,PrivilegeElevation)
pareto(paretoData, col=2:7, main="Expected Reperrcussions from Security Issues")
DenialOfService=6
InformationDisclosure=8
RemoteCodeExecution=22
Spoofing=3
PrivilegeElevation=11
paretoData <- c(DenialOfService,InformationDisclosure,RemoteCodeExecution,Spoofing,PrivilegeElevation)
pareto(paretoData)
freq2.4.1=c(6,8,22,3,11)
Names2.4.1=c("Denial of Service","Information Disclosure","Remote Code Execution","Spoofing","Privilege Elevation")
n=rep(Names2.4.1,freq2.4.1)
pareto(n, mn="Security Bulletins")
freq=c(6,8,22,3,11)
Names=c("Denial of Service","Information Disclosure","Remote Code Execution","Spoofing","Privilege Elevation")
n=rep(Names,freq)
pareto(n, mn="Security Bulletins")
knitr::opts_chunk$set(echo = TRUE)
swd=read.csv("SWDEFECTS.csv")
swd=read.csv("SWDEFECTS.csv")
swd=read.csv("SWDEFECTS.csv")
head(swd)
library(plotrix)
tab=table(swd$defect)
rtab=tab/sum(tab)
round(rtab,2)
pie3D(rtab,labels=list("OK","Defective"),main="pie plot of SWD")
install.packages(c("digest", "stringi"))
setwd("C:/Users/prith/OneDrive/Documents/MATH4753_FA18/Assignment 1")
voltage.df=read.csv("VOLTAGE.csv")
new<-subset(voltage.df,subset=LOCATION=="OLD")
new$VOLTAGE->vtn
lept<-min(vtn)-0.05
rept<-max(vtn)+0.05
rnge<-rept-lept
inc<-rnge/9
seq(lept, rept,by=inc)->cl
cvtn<-cut(vtn,breaks=cl)
new.tab1=table(cvtn)
barplot(new.tab1,space=0,main="Frequency Histogram(OLD)",las=2,col=1:9)
voltage.df=read.csv("VOLTAGE.csv")
new<-subset(voltage.df,subset=LOCATION=="OLD")
new$VOLTAGE->vtn
lept<-min(vtn)-0.05
rept<-max(vtn)+0.05
rnge<-rept-lept
inc<-rnge/9
seq(lept, rept,by=inc)->cl
cvtn<-cut(vtn,breaks=cl)
new.tab1=table(cvtn)
barplot(new.tab1,space=0,main="Frequency Histogram(OLD)",las=2)
library(knitr)
library(kableExtra)
install.packages("kableExtra")
library(knitr)
library(kableExtra)
dt <- mtcars[1:5, 1:6]
library(knitr)
library(kableExtra)
dt <- mtcars[1:5, 1:6]
kable(dt)
n <- 100
x <- rnorm(n)
y <- 2*x + rnorm(n)
out <- lm(y ~ x)
library(xtable)
tab <- xtable(summary(out)$coef, digits=c(0, 2, 2, 1, 2))
print(tab, type="html")
library(knitr)
library(kableExtra)
cl=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
ClassInterval=c("8.0000-8.2889", "8.2889-8.5778", "8.5778-8.667", "8.667-9.1556", "9.1556-9.4445", "9.4445-9.7334", "9.7334-10.0223", "10.0223-10.3112", "10.3112-10.6001", "Total")
dataTabulation=c("1", "0", "111", "0", "0", "1111", "--1111-- --1111-- 11", "--1111-- 1111", "1", "0")
Frequencytab=c(1, 0, 3, 0, 0, 4, 12, 9, 1, 30)
relaticefreq=c(0.03, 0, 0.1, 0, 0, 0.13, 0.4, 0.3, 0.03)
library(knitr)
library(kableExtra)
cl=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
ClassInterval=c("8.0000-8.2889", "8.2889-8.5778", "8.5778-8.667", "8.667-9.1556", "9.1556-9.4445", "9.4445-9.7334", "9.7334-10.0223", "10.0223-10.3112", "10.3112-10.6001", "Total")
dataTabulation=c("1", "0", "111", "0", "0", "1111", "--1111-- --1111-- 11", "--1111-- 1111", "1", "0")
Frequencytab=c(1, 0, 3, 0, 0, 4, 12, 9, 1, 30)
relaticefreq=c(0.03, 0, 0.1, 0, 0, 0.13, 0.4, 0.3, 0.03)
dt <- table[cl, ClassInterval, dataTabulation, Frequencytab, relaticefreq]
library(knitr)
library(kableExtra)
cl=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
ClassInterval=c("8.0000-8.2889", "8.2889-8.5778", "8.5778-8.667", "8.667-9.1556", "9.1556-9.4445", "9.4445-9.7334", "9.7334-10.0223", "10.0223-10.3112", "10.3112-10.6001", "Total")
dataTabulation=c("1", "0", "111", "0", "0", "1111", "--1111-- --1111-- 11", "--1111-- 1111", "1", "0")
Frequencytab=c(1, 0, 3, 0, 0, 4, 12, 9, 1, 30)
relaticefreq=c(0.03, 0, 0.1, 0, 0, 0.13, 0.4, 0.3, 0.03)
kable(cl, ClassInterval, dataTabulation, Frequencytab, relaticefreq)
voltage.df=read.csv("VOLTAGE.csv")
new<-subset(voltage.df,subset=LOCATION=="OLD")
new$VOLTAGE->vtn
lept<-min(vtn)-0.05
rept<-max(vtn)+0.05
rnge<-rept-lept
inc<-rnge/9
seq(lept, rept,by=inc)->cl
cvtn<-cut(vtn,breaks=cl)
new.tab1=table(cvtn)
barplot(new.tab1,space=0,main="Frequency Histogram(OLD)",las=4)
voltage.df=read.csv("VOLTAGE.csv")
new<-subset(voltage.df,subset=LOCATION=="OLD")
new$VOLTAGE->vtn
lept<-min(vtn)-0.05
rept<-max(vtn)+0.05
rnge<-rept-lept
inc<-rnge/9
seq(lept, rept,by=inc)->cl
cvtn<-cut(vtn,breaks=cl)
new.tab1=table(cvtn)
barplot(new.tab1,space=0,main="Frequency Histogram(OLD)",las=2)
vol=read.csv("VOLTAGE.csv")
ovol=with(vol,vol[LOCATION=="OLD",])
v=ovol$VOLTAGE
stem(v)
voltage.df=read.csv("VOLTAGE.csv")
new<-subset(voltage.df,subset=LOCATION=="NEW")
new$VOLTAGE->vtn
lept<-min(vtn)-0.05
rept<-max(vtn)+0.05
rnge<-rept-lept
inc<-rnge/9
seq(lept, rept,by=inc)->cl
cvtn<-cut(vtn,breaks=cl)
new.tab2=table(cvtn)
barplot(new.tab2,space=0,main="Frequency Histogram(NEW)",las=2)
layout(matrix(1:2, nr=1,nc=2))
barplot(new.tab1,space=0,main="Frequency Histogram(OLD)",las=2,col=1:9)
barplot(new.tab2,space=0,main="Frequency Histogram(NEW)",las=2, col=1:9)
layout(matrix(1:2, nr=1,nc=2))
barplot(new.tab1,space=0,main="Frequency Histogram(OLD)",las=2)
barplot(new.tab2,space=0,main="Frequency Histogram(NEW)",las=2)
ovol=with(voltage.df,voltage.df[LOCATION=="OLD",])
oldc=ovol$VOLTAGE
mean(oldv)
ovol=with(voltage.df,voltage.df[LOCATION=="OLD",])
oldv=ovol$VOLTAGE
mean(oldv)
ovol=with(voltage.df,voltage.df[LOCATION=="OLD",])
oldv=ovol$VOLTAGE
mean(oldv)
median(oldv)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(oldv)
ovol=with(voltage.df,voltage.df[LOCATION=="NEW",])
newv=ovol$VOLTAGE
mean(newv)
median(newv)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(newv)
ovol=with(voltage.df,voltage.df[LOCATION=="OLD",])
oldv=ovol$VOLTAGE
mean(oldv)
median(oldv)
stem(oldv)
ovol=with(voltage.df,voltage.df[LOCATION=="NEW",])
newv=ovol$VOLTAGE
mean(newv)
median(newv)
stem(newv)
zscore=(10.50-mean(oldv))/sd(oldv)
zscore
newzscore=(10.50-mean(newv))/sd(newv)
newzscore
with(voltage,boxplot(old$VOLTAGE,ylab="OLD",col="Blue",notch=TRUE))
with(voltage,boxplot(oldv,ylab="OLD",col="Blue",notch=TRUE))
with(voltage.df,boxplot(oldv,ylab="OLD",col="Blue",notch=TRUE))
with(voltage.df,boxplot(oldv,ylab="OLD",col="Blue",notch=TRUE))
z=scale(oldv)
oldv[abs(z)>=2 & abs(z)<=3]
oldv[abs(z)> 3]
with(voltage.df,boxplot(newv,ylab="NEW",col="Red",notch=TRUE))
with(voltage.df,boxplot(newv,ylab="NEW",col="Red",notch=TRUE))
z=scale(newv)
#Possibe outliers
newv[abs(z)>=2 & abs(z)<=3]
#Outliers
newv[abs(z)> 3]
layout(matrix(1:2, nr=1,nc=2))
boxplot(oldv,col="Blue",main="Old Location",ylab="Volts", notch=TRUE)
boxplot(newv,col="RED",main="New Location",ylab="Volts", notch=TRUE)
rpipe=read.csv("ROUGHPIPE.csv")
head(rpipe)
rpipe=read.csv("ROUGHPIPE.csv")
head(rpipe)
I = rpipe$ROUGH
z=scale(I)
length(I[abs(z)<=1.55])/length(I)
data=I[abs(z)<=1.55]
min(data)
max(data)
m=mean(I)
s=sd(I)
ll=m-2*s
ul=m+2*s
rpipe=read.csv("ROUGHPIPE.csv")
head(rpipe)
I = rpipe$ROUGH
z=scale(I)
length(I[abs(z)<=1.55])/length(I)
data=I[abs(z)<=1.55]
min(data)
max(data)
m=mean(I)
m
s=sd(I)
s
ll=m-2*s
ll
ul=m+2*s
ul
rpipe=read.csv("ROUGHPIPE.csv")
head(rpipe)
m <- mean(rpipe$ROUGH)
m
sd <- sd(rpipe$ROUGH)
sd
n <- length(rpipe$ROUGH)
n
error <- qnorm(0.95)*sd/sqrt(n)
error
left <- m-error
right <- m+error
left
right
gobi=read.csv("GOBIANTS.csv")
head(gobi)
mean(gobi$AntSpecies)
median(gobi$AntSpecies)
stem(gobi$AntSpecies)
drysteppe = as.numeric(gobi$PlantCov[gob$Region=="Dry Steppe" | gob$Region!="Gobi Desert"])
gobi=read.csv("GOBIANTS.csv")
head(gobi)
mean(gobi$AntSpecies)
median(gobi$AntSpecies)
stem(gobi$AntSpecies)
drysteppe = as.numeric(gobi$PlantCov[gob$Region=="Dry Steppe" | gobi$Region!="Gobi Desert"])
gobi=read.csv("GOBIANTS.csv")
head(gobi)
mean(gobi$AntSpecies)
median(gobi$AntSpecies)
stem(gobi$AntSpecies)
drysteppe = as.numeric(gobi$PlantCov[gobi$Region=="Dry Steppe" | gobi$Region!="Gobi Desert"])
mean(drysteppe)
median(drysteppe)
stem(drysteppe)
ugh = as.numeric(gobi$PlantCov[gobi$Region=="Gobi Desert" & gobi$Region!="Dry Steppe"])
mean(ugh)
median(ugh)
stem(ugh)
gobi=read.csv("GOBIANTS.csv")
head(gobi)
mean(gobi$AntSpecies)
median(gobi$AntSpecies)
ovol=with(voltage.df,voltage.df[LOCATION=="NEW",])
newv=ovol$VOLTAGE
mean(newv)
median(newv)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(newv)
ovol=with(voltage.df,voltage.df[LOCATION=="OLD",])
oldv=ovol$VOLTAGE
mean(oldv)
median(oldv)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(oldv)
drysteppe = as.numeric(gobi$PlantCov[gobi$Region=="Dry Steppe"])
mean(drysteppe)
median(drysteppe)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(drysteppe)
ds=with(gobi,gobi[Region=="Dry Steppe ",])
drysteppe = ds$AntSpecies
mean(drysteppe)
median(drysteppe)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(drysteppe)
ds=with(gobi,gobi[Region=="Dry Steppe ",])
drysteppe = ds$PlantCov
mean(drysteppe)
median(drysteppe)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(drysteppe)
ds=with(gobi,gobi[Region=="Gobi Desert",])
plant = ds$PlantCov
mean(plant)
median(plant)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(plant)
gxy=read.csv("GALAXY2.csv")
head(gxy)
hist(gxy$VELOCITY,col=1:7)
mean(gxy$VELOCITY)
sd(gxy$VELOCITY)
#For cluster 1
gxya=with(gxy,gxy[VELOCITY<21000,])
mean(gxya)
sd(gxya)
#For cluster 2
gxyb=with(gxy,gxy[VELOCITY>=21000,])
mean(gxyb)
sd(gxyb)
library(ggplot2)
p10 = qplot(RIVER,LENGTH,data=DDT,fill=SPECIES,geom="boxplot")
p10 + labs(title = "Prithviraj Kadiyala")
