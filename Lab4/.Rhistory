n = 30
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
BHDiameter
spruce.df$BHDiameter
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
spruce.df$Height
19.2-20.23
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segment(BHDiameter,19.2,BHDiameter,20.23)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,19.2,BHDiameter,20.23)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,19.2,BHDiameter,20.23)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
spruce.df$Height
spruce.df$BHDiameter
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x,] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
View(curveplot)
View(curveplot)
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:length(spruce.df$BHDiameter)){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:length(spruce.df$BHDiameter)){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*spruce.df$Height[x]  + quad.lm$coef[3]*spruce.df$Height[x]^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:length(spruce.df$BHDiameter)){
mat[spruce.df$BHDiameter] = quad.lm$coef[1] +quad.lm$coef[2]*spruce.df$Height[x]  + quad.lm$coef[3]*spruce.df$Height[x]^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:length(spruce.df$BHDiameter)){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*spruce.df$Height[x]  + quad.lm$coef[3]*((spruce.df$Height[x])^2)
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*spruce.df$Height[x]  + quad.lm$coef[3]*((spruce.df$Height[x])^2)
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curveplot
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
spruce.df$Height
spruce.df$BHDiameter
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
with(arrows(5, 17.3, 11.4, 17.3))
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
with(spruce.df,arrows(5, 17.3, 11.4, 17.3))
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
with(spruce.df,arrows(5, 17.3, 11.4, 17.3))
with(spruce.df,text(0,17.3,"Highest Cook's distance"))
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
with(spruce.df,arrows(5, 17.3, 11.4, 17.3))
with(spruce.df,text(0,17.3,adj=0.5,"Highest Cook's distance"))
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
with(spruce.df,arrows(5, 17.3, 11.4, 17.3))
with(spruce.df,text(5,20,"Highest Cook's distance"))
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#Or more general method
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
with(spruce.df,arrows(5, 17.3, 11.4, 17.3))
with(spruce.df,text(5,18,"Highest Cook's distance"))
#add to the scatter plot
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
myplot=function(x){
result = 0.86089580 +1.46959217*x  -0.02745726*x^2
result
return (result)
}
#For segments
myplot2=function(){
n = 36
mat <- matrix(ncol=1, nrow=n)
for (x in 1:n){
mat[x] = quad.lm$coef[1] +quad.lm$coef[2]*(spruce.df$BHDiameter[x])  + quad.lm$coef[3]*(spruce.df$BHDiameter[x])^2
}
return(mat)
}
curveplot = myplot2()
curve(myplot, lwd=2, col="green3",add=TRUE)
with(spruce.df,{segments(BHDiameter,Height,BHDiameter,curveplot)})
with(spruce.df,arrows(5, 17.3, 11.4, 17.3))
with(spruce.df,text(5,18,"Highest Cook's distance",col="blue"))
