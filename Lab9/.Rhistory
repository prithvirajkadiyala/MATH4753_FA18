knitr::opts_chunk$set(echo = TRUE)
getwd()
myboot2<-function(iter=10000,x,fun="mean",alpha=0.05,cx=1.5,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=cx)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=cx)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=cx)
return(list(ci=ci,fun=fun,x=x))# Some output to use if necessary
}
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun="mean",alpha=0.05,xlab="mean",col="Purple",cx=1.5)
knitr::opts_chunk$set(echo = TRUE)
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data = myboot21(10000,x=sam,fun=function(x) median(x),xlab="median(x)",col="Blue",cx=1.5)
myboot21<-function(iter=10000,x,fun="mean",alpha=0.05,cx=1.5,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=cx)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=cx)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=cx)
return(list(ci=ci,fun=fun,x=x, xstat=xstat))# Some output to use if necessary
}
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data = myboot21(10000,x=sam,fun=function(x) median(x),xlab="median(x)",col="Blue",cx=1.5)
barplot(data$xstat, xlab="iter", ylab="xstat", add=TRUE)
curve(data$xstat)
?curve
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data = myboot21(10000,x=sam,fun=function(x) median(x),xlab="median(x)",col="Blue",cx=1.5)
barplot(data$xstat, xlab="iter", ylab="xstat", add=TRUE)
curve(dnorm(data$xstat))
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data = myboot21(10000,x=sam,fun=function(x) median(x),xlab="median(x)",col="Blue",cx=1.5)
barplot(data$xstat, xlab="iter", ylab="xstat", add=TRUE)
curve(dnorm(x))
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data = myboot21(10000,x=sam,fun=function(x) median(x),xlab="median(x)",col="Blue",cx=1.5)
barplot(data$xstat, xlab="iter", ylab="xstat")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data = myboot21(10000,x=sam,fun=function(x) median(x),xlab="median(x)",col="Blue",cx=1.5)
barplot(data$x, xlab="iter", ylab="xstat")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data = myboot21(10000,x=sam,fun="median",xlab="median(x)",col="Blue",cx=1.5)
barplot(data$xstat, xlab="iter", ylab="xstat")
?median
median(data$xstat)
#Task 4
mybooot2<-function(iter=10000,x,fun="mean",alpha=0.05,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
windows()
layout(matrix(1:2,nr=2,nc=1))
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=1)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=1)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=1)
barplot(xstat,
main=paste("Barplot of statistics","\n","alpha=",alpha," iter=",iter,sep=""),col="Blue")
m=mean(x)
xstat = xstat
return(list(ci=ci,fun=fun,m=m,xstat=xstat))# Some output to use if necessary
}
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
myboot2(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
data=myboot2(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
#Task 4
mybooot21<-function(iter=10000,x,fun="mean",alpha=0.05,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
windows()
layout(matrix(1:2,nr=2,nc=1))
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=1)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=1)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=1)
barplot(xstat,
main=paste("Barplot of statistics","\n","alpha=",alpha," iter=",iter,sep=""),col="Blue")
m=mean(x)
return(list(ci=ci,fun=fun,m=m,xstat=xstat))# Some output to use if necessary
}
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat)
barplot(data$xstat, col="blue")
knitr::opts_chunk$set(echo = TRUE)
mybooot21<-function(iter=10000,x,fun="mean",alpha=0.05,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
windows()
layout(matrix(1:2,nr=2,nc=1))
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=1)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=1)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=1)
barplot(xstat,
main=paste("Barplot of statistics","\n","alpha=",alpha," iter=",iter,sep=""),col="Blue")
m=mean(x)
return(list(ci=ci,fun=fun,m=m,xstat=xstat))# Some output to use if necessary
}
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, col="blue")
myboot21<-function(iter=10000,x,fun="mean",alpha=0.05,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
windows()
layout(matrix(1:2,nr=2,nc=1))
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=1)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=1)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=1)
barplot(xstat,
main=paste("Barplot of statistics","\n","alpha=",alpha," iter=",iter,sep=""),col="Blue")
m=mean(x)
return(list(ci=ci,fun=fun,m=m,xstat=xstat))# Some output to use if necessary
}
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, col="blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, col="blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, col="blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(1000,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, col="blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(1000,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, col="blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(1000,x=sam,fun="median",alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, col="blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(1000,x=sam,fun="median",alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat)
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat,main=paste("Barplot of statistics","\n","alpha=",alpha," iter=",iter,sep=""),col="Blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat,col="Blue")
knitr::opts_chunk$set(echo = TRUE)
getwd()
set.seed(35)
sam=round(rnorm(20,mean=10,sd=4),2)
unique(sample(sam,20,replace=TRUE))
unique(sample(sam,20,replace=TRUE))
unique(sample(sam,20,replace=TRUE))
unique(sample(sam,20,replace=TRUE))
unique(sample(sam,20,replace=TRUE))
unique(sample(sam,20,replace=FALSE))
unique(sample(sam,20,replace=FALSE))
unique(sample(sam,20,replace=FALSE))
unique(sample(sam,20,replace=FALSE))
unique(sample(sam,20,replace=FALSE))
myboot2<-function(iter=10000,x,fun="mean",alpha=0.05,cx=1.5,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=cx)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=cx)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=cx)
return(list(ci=ci,fun=fun,x=x))# Some output to use if necessary
}
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
set.seed(30); sam=rchisq(20,df=3)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
set.seed(40); sam=rgamma(30,shape=2,scale=3)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
set.seed(10); sam=rbeta(20,shape1=3,shape2=4)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
abs(25-23.88)*100/25
abs(3-2.94)*100/3
abs(6-6.5)*100/6
abs(0.4286-0.41)*100/0.4286
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) var(x),alpha=0.20,xlab="var(x)",col="Blue",cx=1.5)
set.seed(30); sam=rchisq(20,df=3)
myboot2(10000,x=sam,fun=function(x) var(x),alpha=0.20,xlab="var(x)",col="Blue",cx=1.5)
set.seed(40); sam=rgamma(30,shape=2,scale=3)
myboot2(10000,x=sam,fun=function(x) var(x),alpha=0.20,xlab="var(x)",col="Blue",cx=1.5)
set.seed(10); sam=rbeta(20,shape1=3,shape2=4)
myboot2(10000,x=sam,fun=function(x) var(x),alpha=0.20,xlab="var(x)",col="Blue",cx=1.5)
myboot21<-function(iter=10000,x,fun="mean",alpha=0.05,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
layout(matrix(1:2,nr=2,nc=1))
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=1)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=1)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=1)
m=mean(x)
return(list(ci=ci,fun=fun,m=m,xstat=xstat))# Some output to use if necessary
}
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat,col="Blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun=function(x) median(x),alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, main="Barplot of xstat",col="Blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun="median" ,alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, main="Barplot of xstat",col="Blue")
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun="median" ,alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, main="Barplot of xstat",col="Blue")
myboot21<-function(iter=10000,x,fun="mean",alpha=0.05,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=1)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=1)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=1)
m=mean(x)
return(list(ci=ci,fun=fun,m=m,xstat=xstat))# Some output to use if necessary
}
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun="median" ,alpha=0.05,xlab="median(x)",col="Blue")
layout()
#barplot of xstat
sam=c(1,1,1,2,2,2,2,3,3,3,4,4)
data=myboot21(100,x=sam,fun="median" ,alpha=0.05,xlab="median(x)",col="Blue")
barplot(data$xstat, main="Barplot of xstat",col="Blue")
myboot2<-function(iter=10000,x,fun="mean",alpha=0.05,cx=1.5,...){  #Notice where the ... is repeated in the code
n=length(x)   #sample size
y=sample(x,n*iter,replace=TRUE)
rs.mat=matrix(y,nr=n,nc=iter,byrow=TRUE)
xstat=apply(rs.mat,2,fun) # xstat is a vector and will have iter values in it
ci=quantile(xstat,c(alpha/2,1-alpha/2))# Nice way to form a confidence interval
# A histogram follows
# The object para will contain the parameters used to make the histogram
para=hist(xstat,freq=FALSE,las=1,
main=paste("Histogram of Bootstrap sample statistics","\n","alpha=",alpha," iter=",iter,sep=""),
...)
#mat will be a matrix that contains the data, this is done so that I can use apply()
mat=matrix(x,nr=length(x),nc=1,byrow=TRUE)
#pte is the point estimate
#This uses whatever fun is
pte=apply(mat,2,fun)
abline(v=pte,lwd=3,col="Black")# Vertical line
segments(ci[1],0,ci[2],0,lwd=4)      #Make the segment for the ci
text(ci[1],0,paste("(",round(ci[1],2),sep=""),col="Red",cex=cx)
text(ci[2],0,paste(round(ci[2],2),")",sep=""),col="Red",cex=cx)
# plot the point estimate 1/2 way up the density
text(pte,max(para$density)/2,round(pte,2),cex=cx)
return(list(ci=ci,fun=fun,x=x))# Some output to use if necessary
}
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
set.seed(30); sam=rchisq(20,df=3)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
set.seed(40); sam=rgamma(30,shape=2,scale=3)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
set.seed(10); sam=rbeta(20,shape1=3,shape2=4)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Blue",cx=1.5)
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun="mean/median",alpha=0.05,xlab="mean(x)/median(x)",col="Bisque4",cx=1.5)
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun="mean/median" ,alpha=0.05,xlab="mean(x)/median(x)",col="Bisque4",cx=1.5)
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.05,xlab="mean(x)/median(x)",col="Bisque4",cx=1.5)
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.05,xlab="mean(x)/median(x)",col="Blue",cx=1.5)
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.05,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.05,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(30); sam=rchisq(20,df=3)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.05,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(40); sam=rgamma(30,shape=2,scale=3)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.05,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(10); sam=rbeta(20,shape1=3,shape2=4)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.05,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(39); sam=rnorm(25,mean=25,sd=10)
quartz()
set.seed(39); sam=rnorm(25,mean=25,sd=10)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.3,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(30); sam=rchisq(20,df=3)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.3,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(40); sam=rgamma(30,shape=2,scale=3)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.3,xlab="mean(x)/median(x)",col="Green",cx=1.5)
set.seed(10); sam=rbeta(20,shape1=3,shape2=4)
myboot2(10000,x=sam,fun=function(x) mean(x)/median(x),alpha=0.3,xlab="mean(x)/median(x)",col="Green",cx=1.5)
?distributions
#Cauchy
sam = rcauchy(20, 2, 2)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.20,xlab="mean(x)",col="Red",cx=1.5)
myboot2(10000,x=sam,fun=function(x) median(x),alpha=0.20,xlab="median(x)",col="Red",cx=1.5)
#Hyper geometric
sam = rhyper(30, 4, 6, 4)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.20,xlab="mean(x)",col="Green",cx=1.5)
myboot2(10000,x=sam,fun=function(x) median(x),alpha=0.20,xlab="median(x)",col="Green",cx=1.5)
#Poisson
sam = rpois(25, 4)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.20,xlab="mean(x)",col="Blue",cx=1.5)
myboot2(10000,x=sam,fun=function(x) median(x),alpha=0.20,xlab="median(x)",col="Blue",cx=1.5)
#Weibull
sam = rweibull(30, 3, 2)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.20,xlab="mean(x)",col="Purple",cx=1.5)
myboot2(10000,x=sam,fun=function(x) median(x),alpha=0.20,xlab="median(x)",col="Purple",cx=1.5)
set.seed(68)
sam=rnorm(20,mean=10,sd=4)
myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Orange",cx=1.5)
set.seed(68)
sam=rnorm(20,mean=10,sd=4)
data=myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Orange",cx=1.5)
data$conf
set.seed(68)
sam=rnorm(20,mean=10,sd=4)
data=myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Orange",cx=1.5)
data$confint
set.seed(68)
sam=rnorm(20,mean=10,sd=4)
data=myboot2(10000,x=sam,fun=function(x) mean(x),alpha=0.05,xlab="mean(x)",col="Orange",cx=1.5)
data$ci
