mynewt(x0=10,delta=0.0001,f=function(x) x^2-4,fdash=function(x) 2*x )
# various log likelihoods defined
logbin=function(x,param) log(dbinom(x,prob=param,size=10))
#max likelihood function
## For repeated sampling from same distribution
mymaxlik=function(lfun,x,param,...){
# how many param values are there?
np=length(param)
# outer -- notice the order, x then param
# this produces a matrix -- try outer(1:4,5:10,function(x,y) paste(x,y,sep=" "))   to understand
z=outer(x,param,lfun)
# z is a matrix where each x,param is replaced with the function evaluated at those values
y=apply(z,2,sum)
# y is a vector made up of the column sums
# Each y is the log lik for a new parameter value
plot(param,y,col="Blue",type="l",lwd=2,...)
# which gives the index for the value of y == max.
# there could be a max between two values of the parameter, therefore 2 indices
# the first max will take the larger indice
i=max(which(y==max(y)))
abline(v=param[i],lwd=2,col="Red")
# plots a nice point where the max lik is
points(param[i],y[i],pch=19,cex=1.5,col="Black")
axis(3,param[i],round(param[i],2))
#check slopes. If it is a max the slope shoud change sign from + to
# We should get three + and two -vs
ifelse(i-3>=1 & i+2<=np, slope<-(y[(i-2):(i+2)]-y[(i-3):(i+1)])/(param[(i-2):(i+2)]-param[(i-3):(i+1)]),slope<-"NA")
return(list(i=i,parami=param[i],yi=y[i],slope=slope))
}
windows()
mymaxlik(x=c(9,9,1,9,9,9),param=seq(0,1,length=1000),lfun=logbin,xlab=expression(pi),main="Binomial",cex.main=2)
mymld=function(lfun,x,param,delta=0.0001){    # param = parameter values, delta=accuracy, x=data
z=outer(x,param,lfun)    # create outer product and evaluate at lfun
y=apply(z,2,sum) # x by param, 2=columns , sum columns = sum of log lik
i=max(which(y==max(y)))# the index for which y is biggest, if two then take the last one
param2=seq(param[i-2],param[i+2],by=delta)# The maximum will be between these two, increments by delta
zz=outer(x,param2,lfun) # new z, call it zz
yy=apply(zz,2,sum)   # new y, call it yy
ii=max(which(yy==max(yy)))# new i,  call it ii , if two, take max of them (last one)
layout(matrix(c(1,2),nr=1,nc=2,byrow=TRUE))# divide plotting space for two graphs
plot(param,y,col="Blue",type="l",lwd=2,ylab="Log. Lik.",xlab=expression(theta))# plot log lik Vs parameter values
abline(v=param[i],lwd=2,col="Red") # Show vertical line at estimated value
axis(3,param[i],round(param[i],2))
points(param[i],y[i],pch=19,cex=1.5,col="Black")# Plot the point
plot(param2,yy,col="Blue",type="l",lwd=2,ylab="Log. Lik.",xlab=expression(theta),las=2) # construct new plot for refined estimate
abline(v=param2[ii],lwd=2,col="Red")  # new verical line
val=round(param2[ii],abs(log10(delta))) ## rounds to the nth place where n is st delta=10^-n.
axis(3,param2[ii],val)
points(param2[ii],yy[ii],pch=19,cex=1.5,col="Black")
}
mymld(x=c(5,5,6,6,6,6),param=seq(0,1,length=1000),lfun=logbin,delta=0.000001)
install.packages("pca3d")
df = read.table("T8-5.DAT")
names(df) = c("pop","deg","emp>16","govemp","medHV")
head(df)
xbar=apply(df,2, mean)
xbar
S=cov(df)
eigen(S)
pr = prcomp(S)
library(pca3d)
pca3d(pr)
mtcars
cars
head(cars)
head(mtcars)
knitr::opts_chunk$set(echo = TRUE)
dataset = cars
dataset
dataset = mtcars
dataset
install.packages("leaflet")
install.packages("dplyr")
?read.csv
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(dplyr)
dataset = read.csv("Emp_Salary.csv",header=TRUE,sep=",")
head(dataset)
names(dataset)
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EduLev)) + geom_point()
g = g + geom_smooth(method = "loess")
g
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EducLev)) + geom_point()
g = g + geom_smooth(method = "loess")
g
?ggplot2
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EducLev)) + geom_point()
g = g = xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EducLev)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
library(s20x)
pairs20x(dataset)
library(ggplot2)
g = ggplot(dataset, aes(x = JobGrade, y = Salary, color = EducLev)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EducLev)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
library(ggplot2)
g = ggplot(dataset, aes(x = Age, y = Salary, color = EducLev)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
library(ggplot2)
g = ggplot(dataset, aes(x = Age, y = Salary, color = Gender)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = Gender)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EducLev)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
trendscatter(YrsExper~Salary,f=0.5,data=dataset)
dataset.lm=lm(YrsExper~Salary,data=dataset)
summary(dataset.lm)
dataset.lm=lm(YrsExper~Salary,data=dataset)
summary(dataset.lm)
height.res=residuals(dataset.lm)
height.fit=fitted(dataset.lm)
plot(height.fit,height.res, xlab="Fitted", ylab="Residuals")
dataset.lm=lm(YrsExper~Salary,data=dataset)
summary(dataset.lm)
Yrs.res=residuals(dataset.lm)
Yrs.fit=fitted(dataset.lm)
plot(Yrs.fit,Yrsheight.res, xlab="Fitted", ylab="Residuals", title="Fitted vs Residuals")
dataset.lm=lm(YrsExper~Salary,data=dataset)
summary(dataset.lm)
Yrs.res=residuals(dataset.lm)
Yrs.fit=fitted(dataset.lm)
plot(Yrs.fit,Yrs.res, xlab="Fitted", ylab="Residuals", title="Fitted vs Residuals")
?plot
dataset.lm=lm(YrsExper~Salary,data=dataset)
summary(dataset.lm)
Yrs.res=residuals(dataset.lm)
Yrs.fit=fitted(dataset.lm)
plot(Yrs.fit,Yrs.res, xlab="Fitted", ylab="Residuals", main="Fitted vs Residuals")
trendscatter(Yrs.fit,Yrs.res, xlab="Fitted", ylab="Residuals")
plot(dataset.lm, which =1)
normcheck(dataset.lm,shapiro.wilk = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(dplyr)
trendscatter(YrsExper~Salary,f=0.5,data=dataset)
dataset = read.csv("Emp_Salary.csv",header=TRUE,sep=",")
head(dataset)
library(s20x)
pairs20x(dataset)
trendscatter(YrsExper~Salary,f=0.5,data=dataset)
trendscatter(YrsExper~Salary,f=1.5,data=dataset)
trendscatter(YrsExper~Salary,f=0.5,data=dataset)
dataset.lm=lm(YrsExper~Salary,data=dataset)
summary(dataset.lm)
ciReg(dataset.lm, conf.level=0.95, print.out=TRUE)
?normcheck
?normcheck
normcheck(dataset.lm,shapiro.wilk = TRUE)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
ciReg(dataset.lm, conf.level=0.95, print.out=TRUE)
dataset.lm=lm(YrsExper~Salary,data=dataset)
summary(dataset.lm)
ciReg(dataset.lm, conf.level=0.95, print.out=TRUE)
Yrs.res=residuals(dataset.lm)
Yrs.fit=fitted(dataset.lm)
plot(Yrs.fit,Yrs.res, xlab="Fitted", ylab="Residuals", main="Fitted vs Residuals")
trendscatter(Yrs.fit,Yrs.res, xlab="Fitted", ylab="Residuals")
normcheck(dataset.lm,shapiro.wilk = TRUE)
plot(dataset.lm, which =1)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
plot(YrsExper~Salary,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
abline(dataset.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
View(dataset.lm)
View(dataset.lm)
View(dataset.lm[["model"]])
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm, col="red")
plot(Salary~YrsExper,main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm, col="red")
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm, col="red")
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,main="Scatter Plot and Fitted Line of Salary vs YrsExper", data=dataset)
abline(dataset.lm, col="yellow")
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
ht.lm=with(dataset, lm(Salary~YrsExper))
abline(ht.lm)
yhat=with(dataset,predict(ht.lm,data.frame(YrsExper)))
with(dataset,{segments(YrsExper,Salary,YrsExper,yhat)})
abline(ht.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
ht.lm=with(dataset, lm(Salary~YrsExper))
abline(ht.lm)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
ciReg(dataset.lm, conf.level=0.95, print.out=TRUE)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
ht.lm=with(dataset, lm(Salary~YrsExper))
abline(ht.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
ht.lm=with(dataset, lm(Salary~YrsExper))
abline(dataset.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
ht.lm=with(dataset, lm(Salary~YrsExper))
abline(ht.lm)
yhat=with(dataset,predict(ht.lm,data.frame(YrsExper)))
with(dataset,{segments(YrsExper,Salary,YrsExper,yhat)})
abline(ht.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Mean of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
with(dataset, abline(h=mean(Salary)))
abline(dataset.lm)
with(dataset, segments(YrsExper,mean(Salary),YrsExper,yhat,col="Red"))
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Total Deviation Line Segments of Salary vs YrsExper", data=dataset)
with(dataset,abline(h=mean(Salary)))
with(dataset, segments(YrsExper,Salary,YrsExper,mean(Salary),col="Green"))
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Total Deviation Line Segments of Salary vs YrsExper", data=dataset)
with(dataset,abline(h=mean(Salary)))
with(dataset, segments(YrsExper,Salary,YrsExper,mean(Salary),col="Green"))
RSS=with(dataset,sum((Salary-yhat)^2))
RSS
MSS=with(dataset,sum((yhat-mean(Salary))^2))
MSS
TSS=with(dataset,sum((Salary-mean(Salary))^2))
TSS
MSS/TSS
trendscatter(Salary~YrsExper,f=0.5,data=dataset)
plot(dataset$YrsExper,Yrs.res, xlab="YrsExper",ylab="Residuals",ylim=c(-1.5*max(Yrs.res),1.5*max(Yrs.res)),xlim=c(0,1.6*max(Yrs.fit)), main="Residuals vs Yrsof Experience")
plot(Yrs.fit,Yrs.res, xlab="Fitted", ylab="Residuals", main="Fitted vs Residuals")
trendscatter(Yrs.fit,Yrs.res, xlab="Fitted", ylab="Residuals")
normcheck(dataset.lm,shapiro.wilk = TRUE)
plot(dataset.lm, which =1)
quad.lm=lm(Salary~YrsExper + I(YrsExper^2),data=dataset)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),main="Scatter Plot and Quadratic of Salary vs YrsExper",data=dataset)
myplot = function(x){quad.lm$coef[1] + quad.lm$coef[2]*x + quad.lm$coef[3]*x^2}
curve(myplot, lwd = 2, add = TRUE)
quad.fit = c(Yrs.fit)
plot(quad.lm, which = 1)
normcheck(quad.lm, shapiro.wilk = TRUE)
summary(quad.lm)
ciReg(quad.lm, conf.level=0.95, print.out=TRUE)
amount = predict(dataset.lm, data.frame(YrsExper=c(10,25,40)))
amount
amount2 = predict(quad.lm, data.frame(YrsExper=c(10,25,40)))
amount2
summary(dataset.lm)
summary(quad.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Mean of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
with(dataset, abline(h=mean(Salary)))
abline(dataset.lm)
with(dataset, segments(YrsExper,mean(Salary),YrsExper,yhat,col="Red"))
anova(dataset.lm,quad.lm)
cooks20x(dataset.lm)
dataset2.lm=lm(Salary~YrsExper, data=dataset[-205,])
summary(dataset2.lm)
dataset2.lm=lm(Salary~YrsExper, data=dataset[-205,-204,-208])
summary(dataset2.lm)
dataset2.lm=lm(Salary~YrsExper, data=dataset[-205,])
summary(dataset2.lm)
cooks20x(quad.lm)
dataset2.lm=lm(Salary~YrsExper, data=dataset[-208,])
summary(dataset2.lm)
dataset2.lm=lm(Salary~YrsExper, data=dataset[-208,])
summary(dataset2.lm)
cooks20x(dataset2.lm)
dataset2.lm=lm(Salary~YrsExper, data=dataset[-208,])
summary(dataset2.lm)
summary(quad.lm)
dataset2.lm=lm(Salary~YrsExper+ I(YrsExper^2), data=dataset[-208,])
summary(dataset2.lm)
summary(quad.lm)
View(dataset)
View(dataset)
View(dataset.lm)
View(dataset.lm)
View(ht.lm)
View(ht.lm)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(dplyr)
names(dataset)
dataset = read.csv("Emp_Salary.csv",header=TRUE,sep=",")
head(dataset)
names(dataset)
library(s20x)
pairs20x(dataset)
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EducLev)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
Yrs.res=residuals(dataset.lm)
Yrs.fit=fitted(dataset.lm)
plot(dataset$YrsExper,Yrs.res, xlab="YrsExper",ylab="Residuals",ylim=c(-1.5*max(Yrs.res),1.5*max(Yrs.res)),xlim=c(0,1.6*max(Yrs.fit)), main="Residuals vs Yrsof Experience")
TSS=with(dataset,sum((Salary-mean(Salary))^2))
TSS
MSS=with(dataset,sum((yhat-mean(Salary))^2))
MSS
RSS=with(dataset,sum((Salary-yhat)^2))
RSS
MSS/TSS
trendscatter(Salary~YrsExper,f=0.5,data=dataset)
Yrs.res=residuals(dataset.lm)
Yrs.fit=fitted(dataset.lm)
plot(dataset$YrsExper,Yrs.res, xlab="YrsExper",ylab="Residuals",ylim=c(-1.5*max(Yrs.res),1.5*max(Yrs.res)),xlim=c(0,1.6*max(Yrs.fit)), main="Residuals vs Yrsof Experience")
?plot
plot(dataset$YrsExper,Yrs.res, xlab="YrsExper",ylab="Residuals",ylim=c(-1.5*max(Yrs.res),1.5*max(Yrs.res)),xlim=c(0,40), main="Residuals vs Yrsof Experience")
plot(dataset$YrsExper,Yrs.res, xlab="YrsExper",ylab="Residuals",ylim=c(-1.5*max(Yrs.res),1.5*max(Yrs.res)),xlim=c(0,max(dataset$YrsExper)), main="Residuals vs Yrsof Experience")
?boxcox
install.packages("boxcoxmix")
?boxcox
??boxcox
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(dplyr)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
lambda = boxcox(dataset.lm)
install.packages("sos")
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(sos)
lambda = boxcox(dataset.lm)
findFn(boxcox)
install.packages("MASS")
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
lambda = boxcox(dataset.lm)
lambda
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
lambda = boxcox(dataset.lm)
lambda
plot(dataset.lm^lambda)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
lambda = boxcox(dataset.lm)
lambda
lambdadataset=dataset.lm^lambda
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
lambda = boxcox(dataset.lm)
lambda
lambdadataset=(dataset.lm)^lambda
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
lambda = boxcox(dataset.lm,lambda=seq(-3,3))
lambda
lambdadataset=(dataset.lm)^lambda
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
lambda = boxcox(dataset.lm,lambda=seq(-3,3))
lambdadataset=(dataset.lm)^lambda
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
lambda = boxcox(dataset.lm,lambda=seq(-3,3))
dataset1.lm=lm(Salary^-1~YrsExper,data=dataset)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
abline(dataset1.lm)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),
main="Residual Line Segments of Salary vs YrsExper", data=dataset)
abline(dataset.lm)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
ds = boxcox(ds,lambda = seq(-3,3))
ds = boxcox(dataset.lm,lambda = seq(-3,3))
best.lam = ds$x[which(ds$y==max(ds$y))]
best.lam
dataset.inv = lm((dataset$Salary)^-1~YrsExper)
dataset.inv = lm((dataset$Salary)^-1~dataset$YrsExper)
plot(dataset.inv)
View(dataset.inv)
View(dataset.inv)
ciReg(dataset.inv, conf.level=0.95, print.out=TRUE)
View(dataset.inv)
View(dataset.lm)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
ds = boxcox(dataset.lm,lambda = seq(-3,3))
best.lam = ds$x[which(ds$y==max(ds$y))]
best.lam
dataset.inv = lm((dataset$Salary)^-1~dataset$YrsExper)
plot(dataset.inv)
summary(dataset.inv)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
ds = boxcox(dataset.lm,lambda = seq(-3,3))
best.lam = ds$x[which(ds$y==max(ds$y))]
best.lam
dataset.inv = lm((dataset$Salary)^-1~dataset$YrsExper)
summary(dataset.inv)
ciReg(dataset.lm, conf.level=0.95, print.out=TRUE)
ciReg(dataset, conf.level=0.95, print.out=TRUE)
leaflet() %>%
setView(lng=-97.445717, lat=35.205894, zoom= 16) %>%
addTiles() %>%
addMarkers(lng=-97.447227, lat=35.209281, popup="We collected data using internet, sitting in the class.")
dataset = read.csv("Emp_Salary.csv",header=TRUE,sep=",")
head(dataset)
names(dataset)
library(s20x)
pairs20x(dataset)
library(ggplot2)
g = ggplot(dataset, aes(x = YrsExper, y = Salary, color = EducLev)) + geom_point()
g = g + xlab("Years of Experience")
g = g + geom_smooth(method = "loess")
g
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
library(MASS)
ds = boxcox(dataset.lm,lambda = seq(-3,3))
best.lam = ds$x[which(ds$y==max(ds$y))]
best.lam
dataset.inv = lm((dataset$Salary)^-1~dataset$YrsExper)
summary(dataset.inv)
ciReg(dataset, conf.level=0.95, print.out=TRUE)
ciReg(dataset.lm, conf.level=0.95, print.out=TRUE)
ciReg(dataset.inv, conf.level=0.95, print.out=TRUE)
ciReg(dataset.lm, conf.level=0.95, print.out=TRUE)
dataset.lm=lm(Salary~YrsExper,data=dataset)
summary(dataset.lm)
quad.lm=lm(Salary~YrsExper + I(YrsExper^2),data=dataset)
plot(Salary~YrsExper,bg="Blue",pch=21,cex=1.2,
ylim=c(0,1.1*max(Salary)),xlim=c(0,1.1*max(YrsExper)),main="Scatter Plot and Quadratic of Salary vs YrsExper",data=dataset)
myplot = function(x){quad.lm$coef[1] + quad.lm$coef[2]*x + quad.lm$coef[3]*x^2}
curve(myplot, lwd = 2, add = TRUE)
quad.fit = c(Yrs.fit)
plot(quad.lm, which = 1)
normcheck(quad.lm, shapiro.wilk = TRUE)
summary(quad.lm)
ciReg(quad.lm, conf.level=0.95, print.out=TRUE)
amount = predict(dataset.lm, data.frame(YrsExper=c(10,25,40)))
amount
amount2 = predict(quad.lm, data.frame(YrsExper=c(10,25,40)))
amount2
summary(dataset.lm)
summary(quad.lm)
anova(dataset.lm,quad.lm)
cooks20x(quad.lm)
dataset2.lm=lm(Salary~YrsExper+ I(YrsExper^2), data=dataset[-208,])
summary(dataset2.lm)
summary(quad.lm)
