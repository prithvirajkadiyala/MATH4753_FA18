knitr::opts_chunk$set(echo = TRUE, message=FALSE)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365^n)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
pie(pA, col=rainbow(1:n))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)+lfactorial(365-(1:n))-(1:n)*log(365^n)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
pie(pA, col=rainbow(1:n))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
pie(pA, col=rainbow(1:n))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
names(pA)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(1:n))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(1:33))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:33
names(pA)
pie(pA, col=rainbow(1:33))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:32
names(pA)
pie(pA, col=rainbow(1:33))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, fill=rainbow(1:33))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(1:33))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
as.table()
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(30)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(40)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
mybirthday(32)
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
as.table(mat)
}
table = mybirthday(32)
table
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
mat
return(as.table(mat))
}
table = mybirthday(32)
table
#In this lab you will use simulation to produce some common  distributions
mybirthday = function(n)
{
# One problem is the size of the numbers
# Use log to make calculation manageable lfactorial is the log of the factorial
# Below is log(P(AC))
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
mat
return(as.table(mat))
}
table = mybirthday(32)
table
knitr::opts_chunk$set(echo = TRUE)
mybirthday = function(n)
{
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(n)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
mat
return(as.table(mat))
}
table = mybirthday(32)
table
mybirthday = function(n)
{
logpAc = lfactorial(365)-lfactorial(365-(1:n))-(1:n)*log(365)
pAc=exp(logpAc)
pA = 1- pAc
names(pA)=1:n
names(pA)
pie(pA, col=rainbow(length(pA)))
mat = matrix(c(round(pA,4)), nr=n, nc=1, byrow=FALSE,dimnames=list("Number in room"=1:n, c("pA")))
mat
return(as.table(mat))
}
table = mybirthday(32)
table
